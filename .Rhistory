todays_metrics$scan_min_duration
cat("Average scan duration is:",round(mean(todays_metrics$scan_min_duration,na.rm = TRUE),digits = 2),"minutes")
min(todays_metrics$scan_min_duration,na.rm = TRUE)
max(todays_metrics$scan_min_duration,na.rm = TRUE)
todays_metrics$records_min_duration <- sapply(todays_metrics$records_duration,bad_Data)
todays_metrics$records_min_duration
todays_metrics$records_min_duration[todays_metrics$records_min_duration < 1] <- NA
avg_records_min_duration <- (round(mean(todays_metrics$records_min_duration,na.rm = TRUE),digits = 2))
avg_records_min_duration
min(todays_metrics$records_min_duration,na.rm = TRUE)
max(todays_metrics$records_min_duration,na.rm = TRUE)
todays_metrics$records_min_duration
avg_records_min_duration
min(todays_metrics$records_min_duration,na.rm = TRUE)
max(todays_metrics$records_min_duration,na.rm = TRUE)
todays_metrics$simulation_min_time <- sapply(todays_metrics$simulation_time,bad_Data)
todays_metrics$simulation_min_time[todays_metrics$simulation_min_time < 1] <-NA
todays_metrics$simulation_min_time
todays_metrics$simulation_min_time[todays_metrics$simulation_min_time < 1] <-NA
avg_simulation_min_time<-(round(mean(todays_metrics$simulation_min_time,na.rm = TRUE),digits = 2))
avg_simulation_min_time
min(todays_metrics$simulation_min_time,na.rm = TRUE)
max(todays_metrics$simulation_min_time,na.rm = TRUE)
store
############################################Pulling data from Google Analytics########################
client_id <- "198928007631-nlnuemk652u069hjai9fjln6meook890.apps.googleusercontent.com"
client_secret <- "g_i2DCTZOxPv-Wzn8gh9GyVv"
oauth_token <- Auth(client_id,client_secret)
save(oauth_token, file="oauth_token")
load("oauth_token")
GetProfiles(oauth_token)
query.init<-Init(start.date = as.character(Sys.Date()), end.date = as.character(Sys.Date()), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews",filters = "ga:pagePath==/store",table.id="ga:6663244")
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store1 <- store %>% select(pageviews,uniquePageviews)
store1
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
library(shiny); runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/IDS1.R')
runApp('Desktop/Shiny_apps/shiny_daily_report1.R')
ls()
rm(list=ls())
getwd()
#setwd("Desktop/Reports/")
################################################connecting to Postgres from R#####################################################
#install.packages("RPostgres")
#install.packages("DBI")
#install.packages("RPostgreSQL")
library(RPostgres)
library(DBI)
library(RPostgreSQL)
library(lubridate)
library(ggplot2)
library(plotly)
library(dplyr)
library(plyr)
library(ggpmisc)
library(readr)
library(reshape2)
library(stringr)
library(RGoogleAnalytics)
library(cowplot)
library(openxlsx)
library(knitr)
#library(miniUI)
library(shiny)
con <- dbConnect(RPostgres::Postgres(),dbname = 'd4dkn9qhev9161',
host = 'ec2-34-195-34-41.compute-1.amazonaws.com',
port = 5432, # or any other port specified by your DBA
user = 'BI-USER',
password = 'p4577313e633999c999d039d4aa3cd698d8dc45091e02cd377c9d30056f1e7254')
############################################Pulling data from Google Analytics########################
client_id <- "198928007631-nlnuemk652u069hjai9fjln6meook890.apps.googleusercontent.com"
client_secret <- "g_i2DCTZOxPv-Wzn8gh9GyVv"
oauth_token <- Auth(client_id,client_secret)
save(oauth_token, file="oauth_token")
load("oauth_token")
GetProfiles(oauth_token)
query.init<-Init(start.date = as.character(Sys.Date()), end.date = as.character(Sys.Date()), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews",filters = "ga:pagePath==/store",table.id="ga:6663244")
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store1 <- store %>% select(pageviews,uniquePageviews)
store1
store1
################################################connecting to Postgres from R#####################################################
library(RPostgres)
library(DBI)
library(RPostgreSQL)
library(lubridate)
library(ggplot2)
library(plotly)
library(dplyr)
library(plyr)
library(readr)
library(reshape2)
library(stringr)
library(RGoogleAnalytics)
library(cowplot)
library(openxlsx)
library(shiny)
library(mailR)
############################################Pulling data from Google Analytics########################
client_id <- "198928007631-nlnuemk652u069hjai9fjln6meook890.apps.googleusercontent.com"
client_secret <- "g_i2DCTZOxPv-Wzn8gh9GyVv"
#oauth_token <- Auth(client_id,client_secret)
#save(oauth_token, file="oauth_token")
load("oauth_token")
GetProfiles(oauth_token)
Sys.Date()
Sys.Date()-1
query.init<-Init(start.date = "2018-02-29", end.date = "2018-02-29", dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews",filters = "ga:pagePath==/store",table.id="ga:6663244")
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
query.init<-Init(start.date = as.character("2018-02-29"), end.date = as.character("2018-02-29"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews",filters = "ga:pagePath==/store",table.id="ga:6663244")
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
query.init<-Init(start.date = as.Date("2018-02-29"), end.date = as.Date("2018-02-29"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews",filters = "ga:pagePath==/store",table.id="ga:6663244")
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
Sys.Date()-6
query.init<-Init(start.date = as.Date("2018-01-29"), end.date = as.Date("2018-02-29"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews",filters = "ga:pagePath==/store",table.id="ga:6663244")
query <- QueryBuilder(query.init)
query.init<-Init(start.date = as.character("2018-01-29"), end.date = as.character("2018-01-29"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews",filters = "ga:pagePath==/store",table.id="ga:6663244")
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store1 <- store %>% select(pageviews,uniquePageviews)
store1
stor
store
query.init<-Init(start.date = as.character("2018-01-29"), end.date = as.character("2018-01-29"), dimensions = dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query.init<-Init(start.date = as.character("2018-01-29"), end.date = as.character("2018-01-29"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store
t(store[,2:8])
query.init<-Init(start.date = as.character("2018-01-30"), end.date = as.character("2018-01-30"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store
t(store)
t(store[,2:8])
query.init<-Init(start.date = as.character("2018-01-29"), end.date = as.character("2018-01-29"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store
store$avgTimeOnPage <- store$avgTimeOnPage/60
t(store[,2:8])
query.init<-Init(start.date = as.character("2018-01-30"), end.date = as.character("2018-01-30"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store
store$avgTimeOnPage <- store$avgTimeOnPage/60
t(store[,2:8])
query.init<-Init(start.date = as.character("2018-01-31"), end.date = as.character("2018-01-31"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store
store$avgTimeOnPage <- store$avgTimeOnPage/60
t(store[,2:8])
query.init<-Init(start.date = as.character("2018-02-01"), end.date = as.character("2018-02-01"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token)
store
store$avgTimeOnPage <- store$avgTimeOnPage/60
t(store[,2:8])
version
version()
version()
version
version$major
version$minor
updateR()
install.packages("updateR")
?version
version
install.packages("parallel")
install.packages("benchmarkme")
library(benchmarkme)
get_cpu()
ls()
rm(list=ls())
getwd()
library(dplyr)
library(plyr)
library(RGoogleAnalytics)
#######################################################################################################
############################################Pulling data from Google Analytics########################
#install.packages("RGoogleAnalytics")
library(RGoogleAnalytics)
client_id <- "198928007631-nlnuemk652u069hjai9fjln6meook890.apps.googleusercontent.com"
client_secret <- "g_i2DCTZOxPv-Wzn8gh9GyVv"
oauth_token <- Auth(client_id,client_secret)
save(oauth_token, file="oauth_token")
load("oauth_token")
GetProfiles(oauth_token)
query.init<-Init(start.date = as.character("2018-02-05"), end.date = as.character("2018-02-05"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-06"), end.date = as.character("2018-02-06"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-07"), end.date = as.character("2018-02-07"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-08"), end.date = as.character("2018-02-08"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
#setwd("Desktop/Reports/")
################################################connecting to Postgres from R#####################################################
#install.packages("RPostgres")
#install.packages("DBI")
#install.packages("RPostgreSQL")
library(RPostgres)
library(DBI)
library(RPostgreSQL)
library(lubridate)
library(ggplot2)
library(plotly)
library(dplyr)
library(plyr)
library(ggpmisc)
library(readr)
library(reshape2)
library(stringr)
library(RGoogleAnalytics)
library(cowplot)
library(openxlsx)
library(knitr)
#library(miniUI)
library(shiny)
############################################Pull data from Google Analytics########################
client_id <- "198928007631-nlnuemk652u069hjai9fjln6meook890.apps.googleusercontent.com"
client_secret <- "g_i2DCTZOxPv-Wzn8gh9GyVv"
oauth_token <- Auth(client_id,client_secret)
save(oauth_token, file="oauth_token")
load("oauth_token")
GetProfiles(oauth_token)
query.init<-Init(start.date = as.character("2018-12-12"), end.date = as.character("2018-02-12"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token,split_daywise = T)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#######################################################################################################
############################################Pulling data from Google Analytics########################
#install.packages("RGoogleAnalytics")
library(RGoogleAnalytics)
client_id <- "198928007631-nlnuemk652u069hjai9fjln6meook890.apps.googleusercontent.com"
client_secret <- "g_i2DCTZOxPv-Wzn8gh9GyVv"
oauth_token <- Auth(client_id,client_secret)
save(oauth_token, file="oauth_token")
load("oauth_token")
GetProfiles(oauth_token)
query.init<-Init(start.date = as.character("2018-12-12"), end.date = as.character("2018-02-12"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
query.init<-Init(start.date = as.character("2018-02-12"), end.date = as.character("2018-02-12"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-13"), end.date = as.character("2018-02-13"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-14"), end.date = as.character("2018-02-14"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-15"), end.date = as.character("2018-02-15"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
ls()
rm(list=ls())
getwd()
#setwd("Desktop/Reports/")
################################################connecting to Postgres from R#####################################################
#install.packages("RPostgres")
#install.packages("DBI")
#install.packages("RPostgreSQL")
library(RPostgres)
library(DBI)
library(RPostgreSQL)
library(lubridate)
library(ggplot2)
library(plotly)
library(dplyr)
library(plyr)
library(ggpmisc)
library(readr)
library(reshape2)
library(stringr)
library(RGoogleAnalytics)
library(cowplot)
library(xlsx)
library(openxlsx)
library(knitr)
library(miniUI)
library(shiny)
library(taskscheduleR)
library(mailR)
#######################################################################################################
############################################Pulling data from Google Analytics########################
#install.packages("RGoogleAnalytics")
library(RGoogleAnalytics)
client_id <- "198928007631-nlnuemk652u069hjai9fjln6meook890.apps.googleusercontent.com"
client_secret <- "g_i2DCTZOxPv-Wzn8gh9GyVv"
oauth_token <- Auth(client_id,client_secret)
save(oauth_token, file="oauth_token")
load("oauth_token")
GetProfiles(oauth_token)
query.init<-Init(start.date = as.character("2018-02-16"), end.date = as.character("2018-02-16"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-17"), end.date = as.character("2018-02-17"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-18"), end.date = as.character("2018-02-18"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-13"), end.date = as.character("2018-02-19"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
#store <- GetReportData(query, oauth_token,split_daywise = T)
store <- GetReportData(query, oauth_token)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
colSums(store1)
query.init<-Init(start.date = as.character("2018-02-13"), end.date = as.character("2018-02-19"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token,split_daywise = T)
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
94/60
query.init<-Init(start.date = as.character("2017-11-15"), end.date = as.character("2018-02-19"), dimensions = "ga:pagePath",
metrics = "ga:pageviews,ga:uniquePageviews,ga:avgTimeOnPage,ga:entrances,ga:bounceRate,ga:exitRate,ga:users",
filters = "ga:pagePath==/store",table.id="ga:6663244",max.results = 20000)
query <- QueryBuilder(query.init)
store <- GetReportData(query, oauth_token,split_daywise = T)
115/60
#store <- records%>%select(PagePath,pageviews,uniquepageviews)%>%filter(startsWith(PagePath,"/store"))
store1 <- store %>% select(pageviews, uniquePageviews,uniquePageviews,avgTimeOnPage,entrances,bounceRate,exitRate,users)
store1$avgTimeOnPage <- store1$avgTimeOnPage/60
colSums(store1)
devtools::install_github("rstudio/keras")
install.packages("zeallot")
version
install.packages("zeallot")
devtools::install_github("rstudio/keras")
install.packages("reticulate")
devtools::install_github("rstudio/keras")
?gsub
library(keras)
dataset_imdb(num_words = 10000)
install_keras()
abc <- dataset_imdb(num_words = 10000)
abc
?sample
rnorm(50,50,10)
?rnorm
as.data.frame(rnorm(50,50,10))
x = as.data.frame(rnorm(50,50,10))
ggplot(x, aes(x = x)) + geom_dotplot()
library(ggplot2)
ggplot(x, aes(x = x)) + geom_dotplot()
x = as.data.frame(rnorm(50,50,10))
ggplot(x, aes(x = x)) + geom_dotplot()
rm(list = ls())
setwd("/Users/syalamanchi/Desktop/Identify_animal/")
#devtools::install_github("rstudio/keras")
#library(keras)
#install_keras()
library(stringr)
library(rlist)
library(tensorflow)
library(keras)
#######################################Fast Feature Extraction with out data Augmentation#########################################
base_dir <- "~/Downloads/DL_Beginner"
train_dir <- file.path(base_dir,"train")
validation_dir <- file.path(base_dir,"validation")
test_dir <- file.path(base_dir,"test")
datagen <- image_data_generator(rescale = 1/255)
batch_size <- 20
array(0,dim = c(sample_count,4,4,512))
rm(list = ls())
setwd("/Users/syalamanchi/Desktop/Identify_animal/")
#devtools::install_github("rstudio/keras")
#library(keras)
#install_keras()
library(stringr)
library(rlist)
library(tensorflow)
library(keras)
array(0,dim = c(10,4,4,512))
?array
